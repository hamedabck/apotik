---
name: Checks

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test-lint:
    name: Test and Lint
    runs-on: ubuntu-24.04
    
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
        ports:
          - 5433:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and cache
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          load: true
          tags: drf-project-app:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      - name: Run Tests
        run: |
          docker compose run --rm \
            -e CI=true \
            -e DATABASE_URL=postgres://test_user:test_password@postgres:5432/test_db \
            app sh -c "python manage.py test --parallel --keepdb"

      - name: Run Linting
        run: docker compose run --rm app sh -c "flake8"

      - name: Run Security Checks
        run: |
          docker compose run --rm app sh -c "pip install bandit safety" && \
          docker compose run --rm app sh -c "bandit -r ." && \
          docker compose run --rm app sh -c "safety check"

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache